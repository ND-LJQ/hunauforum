<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.hunau.mapper.ForumArticleMapper">
  <resultMap id="BaseResultMap" type="edu.hunau.entity.ForumArticle">
    <id column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="follower_count" jdbcType="INTEGER" property="followerCount" />
    <result column="vote_count" jdbcType="INTEGER" property="voteCount" />
    <result column="vote_up_count" jdbcType="INTEGER" property="voteUpCount" />
    <result column="vote_down_count" jdbcType="INTEGER" property="voteDownCount" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="update_time" jdbcType="DATE" property="updateTime" />
    <result column="delete_time" jdbcType="DATE" property="deleteTime" />
    <result column="audit_status" jdbcType="INTEGER" property="auditStatus" />
    <result column="delete_status" jdbcType="INTEGER" property="deleteStatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="edu.hunau.entity.ForumArticleWithBLOBs">
    <result column="content_markdown" jdbcType="LONGVARCHAR" property="contentMarkdown" />
    <result column="content_rendered" jdbcType="LONGVARCHAR" property="contentRendered" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    article_id, user_id, title, comment_count, follower_count, vote_count, vote_up_count, 
    vote_down_count, create_time, update_time, delete_time, audit_status, delete_status
  </sql>
  <sql id="Blob_Column_List">
    content_markdown, content_rendered
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="edu.hunau.entity.ForumArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from forum_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="edu.hunau.entity.ForumArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from forum_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from forum_article
    where article_id = #{articleId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT
      u.headline,
      u.user_id,
      u.username,
      a.article_id,
      u.avatar,
      a.title,
      a.vote_down_Count,
      a.vote_up_count,
      a.comment_count,
      a.follower_count
    FROM
      forum_article AS a
        JOIN forum_user AS u ON a.user_id = u.user_id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from forum_article
    where article_id = #{articleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.hunau.entity.ForumArticleExample">
    delete from forum_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.hunau.entity.ForumArticleWithBLOBs">
    insert into forum_article (article_id, user_id, title, 
      comment_count, follower_count, vote_count, 
      vote_up_count, vote_down_count, create_time, 
      update_time, delete_time, audit_status, 
      delete_status, content_markdown, content_rendered
      )
    values (#{articleId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{commentCount,jdbcType=INTEGER}, #{followerCount,jdbcType=INTEGER}, #{voteCount,jdbcType=INTEGER}, 
      #{voteUpCount,jdbcType=INTEGER}, #{voteDownCount,jdbcType=INTEGER}, #{createTime,jdbcType=DATE}, 
      #{updateTime,jdbcType=DATE}, #{deleteTime,jdbcType=DATE}, #{auditStatus,jdbcType=INTEGER}, 
      #{deleteStatus,jdbcType=INTEGER}, #{contentMarkdown,jdbcType=LONGVARCHAR}, #{contentRendered,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.hunau.entity.ForumArticleWithBLOBs">
    insert into forum_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        article_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="followerCount != null">
        follower_count,
      </if>
      <if test="voteCount != null">
        vote_count,
      </if>
      <if test="voteUpCount != null">
        vote_up_count,
      </if>
      <if test="voteDownCount != null">
        vote_down_count,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
      <if test="contentMarkdown != null">
        content_markdown,
      </if>
      <if test="contentRendered != null">
        content_rendered,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="followerCount != null">
        #{followerCount,jdbcType=INTEGER},
      </if>
      <if test="voteCount != null">
        #{voteCount,jdbcType=INTEGER},
      </if>
      <if test="voteUpCount != null">
        #{voteUpCount,jdbcType=INTEGER},
      </if>
      <if test="voteDownCount != null">
        #{voteDownCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=DATE},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="contentMarkdown != null">
        #{contentMarkdown,jdbcType=LONGVARCHAR},
      </if>
      <if test="contentRendered != null">
        #{contentRendered,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.hunau.entity.ForumArticleExample" resultType="java.lang.Long">
    select count(*) from forum_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectTopicArticleByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap" >
    SELECT
      *
    FROM
      forum_article
    WHERE
        article_id IN ( SELECT topicable_id FROM forum_topicable WHERE topic_id = #{topic_id,jdbcType=BIGINT} )
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update forum_article
    <set>
      <if test="row.articleId != null">
        article_id = #{row.articleId,jdbcType=BIGINT},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=BIGINT},
      </if>
      <if test="row.title != null">
        title = #{row.title,jdbcType=VARCHAR},
      </if>
      <if test="row.commentCount != null">
        comment_count = #{row.commentCount,jdbcType=INTEGER},
      </if>
      <if test="row.followerCount != null">
        follower_count = #{row.followerCount,jdbcType=INTEGER},
      </if>
      <if test="row.voteCount != null">
        vote_count = #{row.voteCount,jdbcType=INTEGER},
      </if>
      <if test="row.voteUpCount != null">
        vote_up_count = #{row.voteUpCount,jdbcType=INTEGER},
      </if>
      <if test="row.voteDownCount != null">
        vote_down_count = #{row.voteDownCount,jdbcType=INTEGER},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=DATE},
      </if>
      <if test="row.updateTime != null">
        update_time = #{row.updateTime,jdbcType=DATE},
      </if>
      <if test="row.deleteTime != null">
        delete_time = #{row.deleteTime,jdbcType=DATE},
      </if>
      <if test="row.auditStatus != null">
        audit_status = #{row.auditStatus,jdbcType=INTEGER},
      </if>
      <if test="row.deleteStatus != null">
        delete_status = #{row.deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="row.contentMarkdown != null">
        content_markdown = #{row.contentMarkdown,jdbcType=LONGVARCHAR},
      </if>
      <if test="row.contentRendered != null">
        content_rendered = #{row.contentRendered,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update forum_article
    set article_id = #{row.articleId,jdbcType=BIGINT},
      user_id = #{row.userId,jdbcType=BIGINT},
      title = #{row.title,jdbcType=VARCHAR},
      comment_count = #{row.commentCount,jdbcType=INTEGER},
      follower_count = #{row.followerCount,jdbcType=INTEGER},
      vote_count = #{row.voteCount,jdbcType=INTEGER},
      vote_up_count = #{row.voteUpCount,jdbcType=INTEGER},
      vote_down_count = #{row.voteDownCount,jdbcType=INTEGER},
      create_time = #{row.createTime,jdbcType=DATE},
      update_time = #{row.updateTime,jdbcType=DATE},
      delete_time = #{row.deleteTime,jdbcType=DATE},
      audit_status = #{row.auditStatus,jdbcType=INTEGER},
      delete_status = #{row.deleteStatus,jdbcType=INTEGER},
      content_markdown = #{row.contentMarkdown,jdbcType=LONGVARCHAR},
      content_rendered = #{row.contentRendered,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update forum_article
    set article_id = #{row.articleId,jdbcType=BIGINT},
      user_id = #{row.userId,jdbcType=BIGINT},
      title = #{row.title,jdbcType=VARCHAR},
      comment_count = #{row.commentCount,jdbcType=INTEGER},
      follower_count = #{row.followerCount,jdbcType=INTEGER},
      vote_count = #{row.voteCount,jdbcType=INTEGER},
      vote_up_count = #{row.voteUpCount,jdbcType=INTEGER},
      vote_down_count = #{row.voteDownCount,jdbcType=INTEGER},
      create_time = #{row.createTime,jdbcType=DATE},
      update_time = #{row.updateTime,jdbcType=DATE},
      delete_time = #{row.deleteTime,jdbcType=DATE},
      audit_status = #{row.auditStatus,jdbcType=INTEGER},
      delete_status = #{row.deleteStatus,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.hunau.entity.ForumArticleWithBLOBs">
    update forum_article
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="followerCount != null">
        follower_count = #{followerCount,jdbcType=INTEGER},
      </if>
      <if test="voteCount != null">
        vote_count = #{voteCount,jdbcType=INTEGER},
      </if>
      <if test="voteUpCount != null">
        vote_up_count = #{voteUpCount,jdbcType=INTEGER},
      </if>
      <if test="voteDownCount != null">
        vote_down_count = #{voteDownCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=DATE},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="contentMarkdown != null">
        content_markdown = #{contentMarkdown,jdbcType=LONGVARCHAR},
      </if>
      <if test="contentRendered != null">
        content_rendered = #{contentRendered,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="edu.hunau.entity.ForumArticleWithBLOBs">
    update forum_article
    set user_id = #{userId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      comment_count = #{commentCount,jdbcType=INTEGER},
      follower_count = #{followerCount,jdbcType=INTEGER},
      vote_count = #{voteCount,jdbcType=INTEGER},
      vote_up_count = #{voteUpCount,jdbcType=INTEGER},
      vote_down_count = #{voteDownCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE},
      delete_time = #{deleteTime,jdbcType=DATE},
      audit_status = #{auditStatus,jdbcType=INTEGER},
      delete_status = #{deleteStatus,jdbcType=INTEGER},
      content_markdown = #{contentMarkdown,jdbcType=LONGVARCHAR},
      content_rendered = #{contentRendered,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.hunau.entity.ForumArticle">
    update forum_article
    set user_id = #{userId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      comment_count = #{commentCount,jdbcType=INTEGER},
      follower_count = #{followerCount,jdbcType=INTEGER},
      vote_count = #{voteCount,jdbcType=INTEGER},
      vote_up_count = #{voteUpCount,jdbcType=INTEGER},
      vote_down_count = #{voteDownCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE},
      delete_time = #{deleteTime,jdbcType=DATE},
      audit_status = #{auditStatus,jdbcType=INTEGER},
      delete_status = #{deleteStatus,jdbcType=INTEGER}
    where article_id = #{articleId,jdbcType=BIGINT}
  </update>


</mapper>